% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/augmentations.R
\name{jst_unify_journal_id}
\alias{jst_unify_journal_id}
\title{Unify journal IDs}
\usage{
jst_unify_journal_id(meta_data, remove_cols = TRUE)
}
\arguments{
\item{meta_data}{Data which was processed via \code{\link[=jst_get_article]{jst_get_article()}}.}

\item{remove_cols}{Should the original columns be removed after unifying?}
}
\value{
A modified \code{tibble}.

A modified tibble.
}
\description{
This function is a simple wrapper to unify journal ids.
}
\details{
Date on journal ids can be found in three columns:
\code{journal_pub_id}, \code{journal_jcode} and \code{journal_doi}. From my experience,
most of the time the relevant dat ais present in \code{journal_pub_id} or
\code{journal_jcode}, with \code{journal_jcode} being to most common identifier.
This function takes the value from \code{journal_pub_id}, and if it is missing,
that from \code{journal_jcode}. \code{journal_doi} is currently disregarded.
}
\examples{
article <- jst_get_article(jst_example("article_with_references.xml"))

jst_unify_journal_id(article)


# per default, original columns with data on the journal are removed
library(dplyr)

jst_unify_journal_id(article) \%>\% 
  select(contains("journal")) \%>\% 
  names()
  
# you can keep them by setting `remove_cols` to `FALSE`
jst_unify_journal_id(article, remove_cols = FALSE) \%>\%  
  select(contains("journal")) \%>\%
  names()
}
